name: Build

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main

jobs:
  build-v2:
    runs-on: macos-latest
    steps:
      - name: Check out repository od
        uses: actions/checkout@v2
      - name: Setup Xcode version
        uses: maxim-lobanov/setup-xcode@v1.3.0
        with:
         xcode-version: latest-stable
      - name: Set variables
        run: |
         HASH=$(cat SNAPSHOT_HASH)
         echo "SNAPSHOT_HASH=$HASH" >> $GITHUB_ENV
      - name: Install tools
        run: |
          brew update
          brew install libzip openssl libplist autoconf automake libtool autoconf-archive pkg-config ninja
          export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/local/opt/openssl@1.1/lib/pkgconfig
          git clone https://github.com/libimobiledevice/libplist
          cd libplist && ./autogen.sh --without-cython && sudo make install && cd ..
          cd libusbmuxd && ./autogen.sh && sudo make install && cd ..
          xcrun --sdk macosx --show-sdk-path
          brew install ideviceinstaller
          brew install ios-deploy
          pip3 install wheel
          pip3 install .
          git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
          git clone https://github.com/flutter/engine.git
      - name: gclient sync
        run: |
          ROOT_DIR=`pwd`
          export PATH=$PATH:$ROOT_DIR/depot_tools
          cd engine
          git fetch origin 9aa7816315095c86410527932918c718cb35e7d6
          git reset --hard FETCH_HEAD
          #reflutter ${{env.SNAPSHOT_HASH}} -l
          #echo 'reflutter' > REFLUTTER
          cd $ROOT_DIR
          mkdir customEngine
          cd customEngine
          echo 'solutions = [{"managed": False,"name": "src/flutter","url": "'$ROOT_DIR/engine'","custom_deps": {},"deps_file": "DEPS","safesync_url": "",},]' > .gclient
          gclient sync
      # Archive customEngine and engine directories as artifacts
      - name: Archive customEngine and engine
        uses: actions/upload-artifact@v2
        with:
          name: Custom Engine
          path: $ROOT_DIR/customEngine
      - name: Archive Engine
        uses: actions/upload-artifact@v2
        with:
          name: Engine
          path: engine
      
      # Publish releases
      #- name: patch code
       #   cd $ROOT_DIR
       #   cd customEngine
          #reflutter ${{env.SNAPSHOT_HASH}} -l
      - name: ninja build Flutter.framework
        run: export PATH=$PATH:`pwd`/depot_tools && sudo xcode-select -s /Applications/Xcode.app && customEngine/src/flutter/tools/gn --ios --ios-cpu=arm64 --runtime-mode=release && ninja -C customEngine/src/out/ios_release
      - name: ninja build libflutter_arm64
        run: export PATH=$PATH:`pwd`/depot_tools && customEngine/src/flutter/tools/gn --android --android-cpu=arm64 --runtime-mode=release && ninja -C customEngine/src/out/android_release_arm64
      - name: ninja build libflutter_arm
        run: export PATH=$PATH:`pwd`/depot_tools && customEngine/src/flutter/tools/gn --android --android-cpu=arm --runtime-mode=release && ninja -C customEngine/src/out/android_release
      - name: ninja build libflutter_x64
        run: export PATH=$PATH:`pwd`/depot_tools && customEngine/src/flutter/tools/gn --android --android-cpu=x64 --runtime-mode=release && ninja -C customEngine/src/out/android_release_x64
      - name: Move to release
        run: |
          cp customEngine/src/out/ios_release/Flutter.framework/Flutter Flutter
          cp customEngine/src/out/android_release_arm64/lib.stripped/libflutter.so libflutter_arm64.so 2>/dev/null || :
          cp customEngine/src/out/android_release/lib.stripped/libflutter.so libflutter_arm.so 2>/dev/null || :
          cp customEngine/src/out/android_release_x64/lib.stripped/libflutter.so libflutter_x64.so 2>/dev/null || :
